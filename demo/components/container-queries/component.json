{
  "name": "container-queries",
  "version": "0.0.0",
  "dependencies": {
    "jquery": "~1.9.1",
    "underscore": "~1.4.4"
  },
  "gitHead": "4dc61bf4589c1275deadb02b63b53ab9c05ed72f",
  "readme": "# Container Queries\n\nThis library will toggle DOM classes on modules based on their container's breakpointed widths. In theory, this should replace a workflow of using CSS media queries, which can only currently query the overall viewport dimensions, and focus on providing breakpoints for every one of your 'module' instances.\n\n**N.B. I do not recommend using this on a production site. Mainly because I haven't yet. Treat this as a proof-of-concept, and please contribute where you can.**\n\n## Getting Started\n\n### 1. Obtain files\n\n### via Twitter Bower\n`bower install container-queries`\n\n#### or manually\nThis project has the following dependencies:\n+ jQuery (1.8+)\n+ Underscore\n\n### 2. Reference files\n\n```html\n\t<script src=\"/components/jquery/jquery.js\"></script>\n\t<script src=\"/components/underscore/underscore.js\"></script>\n\t<script src=\"/components/container-queries/container-queries.js\"></script>\n```\n### 3. Instantiate library\n\nPlace this inside of your boot JavaScript file\n\n```javascript\n\tvar cq = new ContainerQueries();\n```\n\n### 4. Insert data attributes\n\nA lot of the control is declared through HTML data attributes. There are **two required attributes** for every module.\n\n`data-rm-name=\"your-module-name\" data-rm-breakpoints=\"300,600,800\"`\n\n### Module name\n\n`data-rm-name` can be repeated as many times as you need: it's just used as a way to explicitly reference the name of the main module used on that element.\n\n### Breakpoints\n\n`data-rm-breakpoints` is a comma-separated list of breakpoints. These are used for producing the relevant classes on the elements (*not* their containers).\n\nFor example, if you had breakpoints of '300,600,800', and a module (whose main class was `.nav`) had parent element that was currently at a width of 500 pixels, then the classes that would be applied are `.nav--min-width-300`, `.nav--max-width-600`, and `.nav--max-width-800`. These are essentially queries that are 'true'.\n\n**Note**: To avoid min & max queries becoming true at the same time, the 'max' query will only be true for 1 pixel less than the query itself.\n\n## Demo\n\nYou can view a demo of this by downloading the repo and opening the `./demo` folder. It's fairly basic, and just shows the benefit of using the library.\n\n## API\n\n### Methods\n\nThere are currently no useful methods to interact with. But the library is structured as a simple prototypal object, so all methods can be accessed if required.\n\n### Configuration\n\nHere is the default configuration.\n\n```javascript\n\tinterval: 500, // This should be 'often enough' to avoid significant layout breakages\n\tselectors: {\n\t\tmodules: '.module' // A global class that we apply to all concerned elements\n\t},\n\tsuffixes: {\n\t\tmaxWidth: '--max-width-', // Will output as e.g. '.module--max-width-300'\n\t\tminWidth: '--min-width-' // Will output as e.g. '.module--min-width-300'\n\t},\n\tdataAttrs: {\n\t\tname: 'rm-name',\n\t\tmodules: 'rm-modules',\n\t\tcontainer: 'rm-container',\n\t\tbreakpoints: 'rm-breakpoints',\n\t\twidthCache: 'rm-width'\n\t}\n```\n\n... you can pass in your own configuration when instantiating the library.\n\n```javascript\n\tvar cq = new ContainerQueries({\n\t\tselectors: {\n\t\t\tmodules: '.iLoveCamels'\n\t\t}\n\t}\n\t});\n```\n\n## Todos\n\nI'm looking for people to help out on this project. I don't have a huge amount of time for open-source work, and as stated at the top, this is more of a proof-of-concept at the minute, rather than a library I would recommend using on a production site.\n\nSo, please get involved, and let me know if you'd like to become a regular contributor.\n\n- [ ] Add support for height queries\n- [ ] Add support for 'em'-based queries\n- [ ] Investigate and improved 'tick' performance\n- [ ] Make containers actually *aware* of what their modules width hypothetically would be (to allow for 'magic queries')\n\n",
  "readmeFilename": "README.md",
  "_id": "container-queries@0.0.1",
  "description": "This library will toggle DOM classes on modules based on their container's breakpointed widths. In theory, this should replace a workflow of using CSS media queries, which can only currently query the overall viewport dimensions, and focus on providing breakpoints for every one of your 'module' instances.",
  "commit": "4dc61bf4589c1275deadb02b63b53ab9c05ed72f",
  "repository": {
    "type": "git",
    "url": "git://github.com/joecritch/container-queries"
  }
}